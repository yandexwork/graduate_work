version: '3.9'

services:

  api:
    build: .
    container_name: auth-api
    command: >
      sh -c "poetry run alembic upgrade head &&
             poetry run uvicorn --reload --host 0.0.0.0 --port 8000 src.main:app"
    depends_on:
      - postgres
      - redis
    networks:
      - auth_network
      - jaeger_net
    volumes:
      - ${PROJECT_PATH}:/app
    env_file:
      - .env

  redis:
    image: redis:7.0.10
    container_name: auth-redis
    volumes:
      - auth-redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 60s
      timeout: 30s
      retries: 10
      start_period: 30s
    restart: unless-stopped
    networks:
      - auth_network
    env_file:
      - .env

  postgres:
    image: postgres:13
    container_name: auth-postgres
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: user
      POSTGRES_DB: auth
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - auth_network

  nginx:
    image: nginx:stable
    container_name: auth-nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - auth_network

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - 16686:16686
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
    networks:
      - jaeger_net

volumes:
  auth-redis-data:
  auth-db-data:

networks:
  auth_network:
  jaeger_net:
